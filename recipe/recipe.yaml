schema_version: 1

context:
  version: "1.0.1post1"

package:
  name: libplanc
  version: ${{ version|replace("-", "_") }}

source:
  url: https://github.com/welch-lab/libplanc/archive/refs/tags/${{ version }}.tar.gz
  sha256: 05fddb329671caffdfbb852e19b39545c6ca8fa2b599512ab04e6c4d078f6bcf

build:
  number: 0
  script:
    - if: linux and (build_platform != target_platform)
      then:
        - cmake -S $SRC_DIR -DHDF5_LINKS_EXITCODE=0 -DBUILD_EXECUTABLE=ON -DBLA_VENDOR="Generic" $CMAKE_ARGS
        - cmake --build .
        - cmake --install .
    - if: linux and (build_platform == target_platform)
      then:
        - cmake -S $SRC_DIR -DBUILD_EXECUTABLE=ON -DBLA_VENDOR="Generic" $CMAKE_ARGS
        - cmake --build .
        - cmake --install .
    - if: osx and (build_platform != target_platform)
      then:
        - cmake -E env CXXFLAGS=-D_LIBCPP_DISABLE_AVAILABILITY cmake -S $SRC_DIR -DHDF5_LINKS_EXITCODE=0 -DBUILD_EXECUTABLE=ON $CMAKE_ARGS
        - cmake --build .
        - cmake --install .
    - if: osx and (build_platform == target_platform)
      then:
        - cmake -E env CXXFLAGS=-D_LIBCPP_DISABLE_AVAILABILITY cmake -S $SRC_DIR -DBUILD_EXECUTABLE=ON $CMAKE_ARGS
        - cmake --build .
        - cmake --install .
    - if: win
      then:
        - cmake -S %SRC_DIR% -DCBLAS_H_DIR=%LIBRARY_INC% -DBUILD_EXECUTABLE=ON %CMAKE_ARGS%
        - cmake --build . --config Release
        - cmake --install .
        - gendef %LIBRARY_BIN%\nmflib.dll
        - x86_64-w64-mingw32-dlltool -k --output-lib %LIBRARY_LIB%\nmflib.dll.a --def nmflib.def

requirements:
  build:
    - if: unix
      then: make
      else:
        - gendef
        - binutils
    - ${{ compiler('c') }}
    - ${{ stdlib("c") }}
    - ${{ compiler('cxx') }}
    - if: linux
      then: libgomp
      else: llvm-openmp
    - cmake
    - pkg-config
  host:
    - libhwloc >=2.0.0,<3.0.0
    - zlib
    - hdf5 >=1.10
    - if: linux
      then: libgomp
      else: llvm-openmp
    - libblas
    - libcblas
    - liblapack
    - libtmglib
    - indicators
    - armadillo
    - cpp-argparse
    - if: win
      then: dlfcn-win32
  run:
    - if: osx and arm64
      then: libblas * *accelerate
      else: libblas
  run_exports:
    - ${{ pin_subpackage('libplanc', exact=True) }}
tests:
  - script:
      - plancnmf --help
  - package_contents:
      lib:
        - nmflib
about:
  license: GPL-2.0-or-later
  summary: '''PLANC'', a highly parallel and extensible NMF/NTF  (Non-negative Matrix/Tensor Factorization) library. Wraps algorithms described in Kannan et. al (2018) <doi:10.1109/TKDE.2017.2767592> and Eswar et. al (2021) <doi:10.1145/3432185>. Implements algorithms described in Welch et al. (2019) <doi:10.1016/j.cell.2019.05.006>,
    Gao et al. (2021) <doi:10.1038/s41587-021-00867-x>, and Kriebel & Welch (2022) <doi:10.1038/s41467-022-28431-4>.'
  license_file:
    - README.md
  homepage: https://github.com/welch-lab/libplanc

extra:
  recipe-maintainers:
    - theAeon
